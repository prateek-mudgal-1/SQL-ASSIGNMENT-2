use mavenmovies;
-- question 1) Retrieve the total number of rentals made in the Sakila database. 
-- solution 1)
select count(*) from rental;
-- question 2) Find the average rental duration (in days) of movies rented from the Sakila database.
-- solution 2) 
select avg(datediff(return_date, rental_date)) as average_rental_duration from rental;
-- question 3) Display the first name and last name of customers in uppercase. 
-- solution 3)
select concat(upper(first_name)," ",upper(last_name))as name_in_uppercase from customer;
-- question 4) Extract the month from the rental date and display it alongside the rental ID. 
-- solution 4)
select month(rental_date) from rental;
-- question 5) Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
-- solution 5)
select customer_id,count(*) from rental group by customer_id;
-- question 6) Find the total revenue generated by each store. 
-- solution 6)
select sum(amount) from payment group by staff_id; -- here we have have only two stores and each of them have a single staff so we can group by staffid in order to find total sales from store
-- question 7) Display the title of the movie, customer s first name, and last name who rented it. 
-- solution 7)
select title,first_name,last_name from film inner join rental inner join customer inner join inventory;
-- question 8) Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
-- solution 8) 
select a.first_name, a.last_name from actor a inner join film_actor fa on a.actor_id = fa.actor_id inner join film f on fa.film_id = f.film_id where f.title = 'Gone with the Wind';
-- question 9) Determine the total number of rentals for each category of movies. 
-- solution 9)
SELECT c.name AS category, COUNT(r.rental_id) AS total_rentals FROM rental r JOIN inventory i ON r.inventory_id = i.inventory_id JOIN film f ON i.film_id = f.film_id JOIN film_category fc ON f.film_id = fc.film_id JOIN category c ON fc.category_id = c.category_id GROUP BY c.name ORDER BY total_rentals DESC;
-- question 10)Find the average rental rate of movies in each language. 
-- solution 10)
select avg(rental_rate) from film inner join language on language.language_id= film.language_id group by language.name; -- here movies are only in 1 language.
-- question 11) Retrieve the customer names along with the total amount they've spent on rentals. 
-- solution 11)
select concat(first_name," ",last_name),sum(amount) as amount from customer inner join payment on customer.customer_id=payment.customer_id group by payment.customer_id order by(amount) desc;
-- question 12)List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- solution 12)
select title from film inner join inventory on film.film_id=inventory.film_id
inner join rental on rental.inventory_id=inventory.inventory_id inner join
customer on rental.customer_id=customer.customer_id inner join
address on customer.address_id=address.address_id inner join
city on city.city_id=address.city_id where city="london";
-- question 13)Display the top 5 rented movies along with the number of times they've been rented. 
-- solution 13)
select title, count(rental_id) as count from film inner join inventory on film.film_id=inventory.inventory_id inner join rental on rental.inventory_id=inventory.inventory_id group by film.title order by count desc limit 5;
-- question 14) Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- solution 14)
select first_name,last_name from customer where store_id = 1 and store_id = 2;






